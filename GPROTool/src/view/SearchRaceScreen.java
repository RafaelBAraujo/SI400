/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.GproToolController;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import model.Race;
import model.RaceQuery;
import view.MainScreen;

/**
 *
 * @author Rafael
 */
public class SearchRaceScreen extends javax.swing.JFrame {

    private GproToolController baseController;
    
    /**
     * Creates new form MainScreen
     */
    public SearchRaceScreen(GproToolController controller) {
        baseController = controller;
        setLookAndFeel();
        initComponents();
        initSelfListeners(this.baseController);
        addRankDivisions();
        centerFrame();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMainScreen = new javax.swing.JPanel();
        lblSeason = new javax.swing.JLabel();
        cmbSeason = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        cmbRank = new javax.swing.JComboBox<>();
        cmbRankDivision = new javax.swing.JComboBox<>();
        lblRankDivision = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblResults = new javax.swing.JTable();
        lblTrack = new javax.swing.JLabel();
        cmbTrack = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cmbTyres = new javax.swing.JComboBox<>();
        lblStart = new javax.swing.JLabel();
        txtStart = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtFinish = new javax.swing.JTextField();
        lblCTDry = new javax.swing.JLabel();
        txtCTDry = new javax.swing.JTextField();
        lblCTWet = new javax.swing.JLabel();
        txtCTWet = new javax.swing.JTextField();
        txtOvertake = new javax.swing.JTextField();
        lblCTWet1 = new javax.swing.JLabel();
        txtDefend = new javax.swing.JTextField();
        lblDefend = new javax.swing.JLabel();
        txtMalfunc = new javax.swing.JTextField();
        lblMalfunc = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cmbWeather = new javax.swing.JComboBox<>();
        lblTemp = new javax.swing.JLabel();
        txtTemp = new javax.swing.JTextField();
        btnReturn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Search race");
        setResizable(false);

        lblSeason.setText("Season");

        cmbSeason.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "58", "59", "60", "61" }));

        jLabel1.setText("Rank");

        cmbRank.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "Rookie", "Amateur", "Pro", "Master", "Elite" }));
        cmbRank.setMaximumSize(new java.awt.Dimension(66, 20));
        cmbRank.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbRankItemStateChanged(evt);
            }
        });
        cmbRank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbRankActionPerformed(evt);
            }
        });

        lblRankDivision.setText("Division");

        tblResults.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Races"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblResults);
        if (tblResults.getColumnModel().getColumnCount() > 0) {
            tblResults.getColumnModel().getColumn(0).setMinWidth(0);
            tblResults.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblResults.getColumnModel().getColumn(0).setMaxWidth(0);
            tblResults.getColumnModel().getColumn(1).setResizable(false);
        }

        lblTrack.setText("Track");

        cmbTrack.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "A1-Ring", "Adelaide", "Ahvenisto", "Anderstorp", "Austin", "Avus", "Baku City", "Barcelona", "Brands Hatch", "Brasilia", "Bremgarten", "Brno", "Bucharest Ring", "Buenos Aires", "Estoril", "Fiorano", "Fuji", "Grobnik", "Hockenheim", "Hungaroring", "Imola", "Indianapolis", "Indianapolis Oval", "Interlagos", "Irungattukottai", "Istanbul", "Jerez", "Jyllands-Ringen", "Kaunas", "Kyalami", "Laguna Seca", "Magny Cours", "Melbourne", "Mexico City", "Monte Carlo", "Montreal", "Monza", "Mugello", "New Delhi", "Nurburgring", "Oesterreichring", "Paul Ricard", "Portimao", "Poznan", "Rafaela Oval", "Sakhir", "Sepang", "Serres", "Shanghai", "Silverstone", "Singapore", "Slovakiaring", "Sochi", "Spa", "Suzuka", "Valencia", "Yas Marina", "Yeongam", "Zandvoort", "Zolder" }));
        cmbTrack.setMaximumSize(new java.awt.Dimension(56, 20));

        jLabel2.setText("Tyres");

        cmbTyres.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "Extra Soft", "Soft", "Medium", "Hard", "Rain" }));
        cmbTyres.setMaximumSize(new java.awt.Dimension(56, 20));

        lblStart.setText("Start");

        jLabel3.setText("Finish");

        txtFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFinishActionPerformed(evt);
            }
        });

        lblCTDry.setText("CT Dry");

        lblCTWet.setText("CT Wet");

        txtCTWet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCTWetActionPerformed(evt);
            }
        });

        lblCTWet1.setText("Overtake");

        lblDefend.setText("Defend");

        lblMalfunc.setText("Malfunc");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jButton1.setText("Set car level");
        jButton1.setMaximumSize(new java.awt.Dimension(91, 25));
        jButton1.setMinimumSize(new java.awt.Dimension(91, 25));
        jButton1.setPreferredSize(new java.awt.Dimension(91, 25));

        jButton2.setText("Set car wear");
        jButton2.setMaximumSize(new java.awt.Dimension(91, 25));
        jButton2.setMinimumSize(new java.awt.Dimension(91, 25));
        jButton2.setPreferredSize(new java.awt.Dimension(73, 20));

        jButton3.setText("Set pilot");
        jButton3.setPreferredSize(new java.awt.Dimension(73, 20));

        jLabel4.setText("Weather");

        cmbWeather.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "Sunny", "Partially Cloudy", "Cloudy", "Rainy", "Rain", "Heavy Rain" }));
        cmbWeather.setMaximumSize(new java.awt.Dimension(56, 20));

        lblTemp.setText("Temp");

        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainScreenLayout = new javax.swing.GroupLayout(pnlMainScreen);
        pnlMainScreen.setLayout(pnlMainScreenLayout);
        pnlMainScreenLayout.setHorizontalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainScreenLayout.createSequentialGroup()
                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlMainScreenLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbSeason, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblSeason))
                                .addGap(18, 18, 18)
                                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(cmbRank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbRankDivision, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblRankDivision)))
                            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbTrack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTrack))
                                .addGap(18, 18, 18)
                                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbTyres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbWeather, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCTDry)
                                    .addComponent(txtCTDry, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCTWet, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(lblCTWet)))))
                        .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(lblCTWet1))
                                    .addComponent(txtOvertake, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTemp))))
                        .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(lblDefend))
                                    .addComponent(txtDefend, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(lblMalfunc))
                                    .addComponent(txtMalfunc, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtStart, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblStart))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtFinish, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                        .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlMainScreenLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnReturn)))))
                .addGap(19, 19, 19))
        );
        pnlMainScreenLayout.setVerticalGroup(
            pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainScreenLayout.createSequentialGroup()
                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainScreenLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainScreenLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbRank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainScreenLayout.createSequentialGroup()
                                .addComponent(lblRankDivision)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbRankDivision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlMainScreenLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmbWeather, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                        .addComponent(lblTemp)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblTrack))
                                .addGap(23, 23, 23)
                                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                            .addComponent(lblCTWet)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtCTWet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainScreenLayout.createSequentialGroup()
                                            .addComponent(lblCTWet1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtOvertake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                            .addComponent(lblDefend)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtDefend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                            .addComponent(lblCTDry)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtCTDry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                            .addComponent(lblMalfunc)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtMalfunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                        .addComponent(lblSeason)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmbSeason, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(pnlMainScreenLayout.createSequentialGroup()
                                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(lblStart)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(cmbTyres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtFinish, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmbTrack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlMainScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(btnReturn))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMainScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlMainScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed

        RaceQuery query = new RaceQuery();
        
        if(String.valueOf(cmbTrack.getSelectedItem()).compareTo("Any") != 0)
            query.setTrack(String.valueOf(cmbTrack.getSelectedItem()));
        
        if(String.valueOf(cmbTyres.getSelectedItem()).compareTo("Any") != 0)
            query.setTyres(String.valueOf(cmbTyres.getSelectedItem()));
        
        if(String.valueOf(cmbSeason.getSelectedItem()).compareTo("Any") != 0)
            query.setSeason(String.valueOf(cmbSeason.getSelectedItem()));        

        if(String.valueOf(cmbRank.getSelectedItem()).compareTo("Any") != 0)
            query.setRank(String.valueOf(cmbRank.getSelectedItem()));
        
        if(String.valueOf(cmbRankDivision.getSelectedItem()).compareTo("Any") != 0)
            query.setRankDivision(String.valueOf(cmbRankDivision.getSelectedItem()));
        
        if(String.valueOf(cmbWeather.getSelectedItem()).compareTo("Any") != 0)
            query.setWeather(String.valueOf(cmbWeather.getSelectedItem()));

        if(txtTemp.getText().compareTo("") != 0)
            query.setTemperature(txtTemp.getText());

        if(txtCTDry.getText().compareTo("") != 0)
            query.setCTDry(txtCTDry.getText());
        
        if(txtCTWet.getText().compareTo("") != 0)
            query.setCTWet(txtCTWet.getText());
        
        if(txtOvertake.getText().compareTo("") != 0)
            query.setOvertake(txtOvertake.getText());
        
        if(txtDefend.getText().compareTo("") != 0)
            query.setDefend(txtDefend.getText());
        
        if(txtMalfunc.getText().compareTo("") != 0)
            query.setMalfunc(txtMalfunc.getText());

        DefaultTableModel model = (DefaultTableModel) tblResults.getModel();
        if(!this.baseController.searchRace(query, model)){
            JOptionPane.showMessageDialog(null, "No races were found.");
        }
        
        /*if (this.baseController.searchRace(Integer.parseInt(season), rank, Integer.parseInt(rankDivision))){
            System.out.println("ENCONTREI");
            DefaultTableModel model = (DefaultTableModel) tblResults.getModel();
            model.addRow(new Object[]{"S" + season + " " + rank + rankDivision});
        }
        else{
            System.out.println("NAO ENCONTREI");
        }*/
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void initSelfListeners(GproToolController controller){
        
        this.tblResults.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent mouseEvent) {
                JTable table = (JTable) mouseEvent.getSource();
                DefaultTableModel model = (DefaultTableModel) table.getModel();
                Point point = mouseEvent.getPoint();
                int row = table.rowAtPoint(point);
                if (mouseEvent.getClickCount() == 2) {
                    Integer raceKey = Integer.parseInt(String.valueOf(model.getDataVector().elementAt(table.getSelectedRow())).split("[\\[\\]]")[1].split(",")[0]);
                    RaceAnalysisScreen raceScreen = new RaceAnalysisScreen(controller, raceKey);
                    raceScreen.setVisible(true);
                }
            }
        });
        
    }
    
    private void cmbRankItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbRankItemStateChanged
        addRankDivisions();
    }//GEN-LAST:event_cmbRankItemStateChanged

    private void txtFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFinishActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFinishActionPerformed

    private void cmbRankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbRankActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbRankActionPerformed

    private void txtCTWetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCTWetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCTWetActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        dispose();
        MainScreen ms = new MainScreen(this.baseController);
        ms.setVisible(true);
    }//GEN-LAST:event_btnReturnActionPerformed

    public static void setLookAndFeel() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            System.out.println("Error setting native LAF: " + e);
        }
    }

    private void centerFrame() {

        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Point middle = new Point(screenSize.width / 2, screenSize.height / 2);
        Point newLocation = new Point(middle.x - (this.getWidth() / 2),
                middle.y - (this.getHeight() / 2));
        this.setLocation(newLocation);
    }
    
    public void addRankDivisions(){
        
        String rank = (String) cmbRank.getSelectedItem();
        
        if(rank.compareTo("Rookie") == 0 || rank.compareTo("Any") == 0){
            cmbRankDivision.removeAllItems();
            cmbRankDivision.addItem("Any");
            for(int i = 1; i < 201; i++){
                cmbRankDivision.addItem(String.valueOf(i));
            }
        }
        else if(rank.compareTo("Amateur") == 0){
            cmbRankDivision.removeAllItems();
            cmbRankDivision.addItem("Any");
            for(int i = 1; i < 126; i++){
                cmbRankDivision.addItem(String.valueOf(i));
            }
        }
        else if (rank.compareTo("Pro") == 0) {
            cmbRankDivision.removeAllItems();
            cmbRankDivision.addItem("Any");
            for (int i = 1; i < 26; i++) {
                cmbRankDivision.addItem(String.valueOf(i));
            }
        }
        else if (rank.compareTo("Master") == 0) {
            cmbRankDivision.removeAllItems();
            cmbRankDivision.addItem("Any");
            for (int i = 1; i < 6; i++) {
                cmbRankDivision.addItem(String.valueOf(i));
            }
        }
        else if (rank.compareTo("Elite") == 0) {
            cmbRankDivision.removeAllItems();
            cmbRankDivision.addItem("Any");
            for (int i = 1; i < 2; i++) {
                cmbRankDivision.addItem(String.valueOf(i));
            }
        }
    }
        
    public void addTracks(){
        
        ArrayList<String> trackNames = baseController.getTrackList();
        
        for(String name : trackNames){
            cmbTrack.addItem(name);
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cmbRank;
    private javax.swing.JComboBox<String> cmbRankDivision;
    private javax.swing.JComboBox<String> cmbSeason;
    private javax.swing.JComboBox<String> cmbTrack;
    private javax.swing.JComboBox<String> cmbTyres;
    private javax.swing.JComboBox<String> cmbWeather;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCTDry;
    private javax.swing.JLabel lblCTWet;
    private javax.swing.JLabel lblCTWet1;
    private javax.swing.JLabel lblDefend;
    private javax.swing.JLabel lblMalfunc;
    private javax.swing.JLabel lblRankDivision;
    private javax.swing.JLabel lblSeason;
    private javax.swing.JLabel lblStart;
    private javax.swing.JLabel lblTemp;
    private javax.swing.JLabel lblTrack;
    private javax.swing.JPanel pnlMainScreen;
    private javax.swing.JTable tblResults;
    private javax.swing.JTextField txtCTDry;
    private javax.swing.JTextField txtCTWet;
    private javax.swing.JTextField txtDefend;
    private javax.swing.JTextField txtFinish;
    private javax.swing.JTextField txtMalfunc;
    private javax.swing.JTextField txtOvertake;
    private javax.swing.JTextField txtStart;
    private javax.swing.JTextField txtTemp;
    // End of variables declaration//GEN-END:variables
}
