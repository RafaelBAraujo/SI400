/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.GproToolController;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.TestingQuery;
import static view.Login.setLookAndFeel;

/**
 *
 * @author Dulcina
 */
public class SearchTestingScreen extends javax.swing.JFrame {
    
    private GproToolController baseController;
    
    /**
     * Creates new form SearchTestingScreen
     */
    public SearchTestingScreen(GproToolController controller) {
        baseController = controller;
        setLookAndFeel();
        initComponents();
        addRankDivisions();
        initSelfListeners(baseController);
        
        centerFrame();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblSeason = new javax.swing.JLabel();
        lblRank = new javax.swing.JLabel();
        lblTrack = new javax.swing.JLabel();
        lblTyres = new javax.swing.JLabel();
        lblTemp = new javax.swing.JLabel();
        lblWeather = new javax.swing.JLabel();
        cmbSeason = new javax.swing.JComboBox<>();
        cmbRank = new javax.swing.JComboBox<>();
        cmbTrack = new javax.swing.JComboBox<>();
        cmbTyres = new javax.swing.JComboBox<>();
        cmbTemp = new javax.swing.JComboBox<>();
        cmbWeather = new javax.swing.JComboBox<>();
        btnSetCarLvl = new javax.swing.JButton();
        btnSetCarWear = new javax.swing.JButton();
        btnSetPilot = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblResults = new javax.swing.JTable();
        btnSearch = new javax.swing.JButton();
        lblRank1 = new javax.swing.JLabel();
        cmbRankDivision = new javax.swing.JComboBox<>();
        btnReturn = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblSeason.setText("Season");

        lblRank.setText("Rank");

        lblTrack.setText("Track");

        lblTyres.setText("Tyres");

        lblTemp.setText("Temp");

        lblWeather.setText("Weather");

        cmbSeason.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "59", "60", "61" }));

        cmbRank.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "Rookie", "Amateur", "Pro", "Master", "Elite" }));
        cmbRank.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbRankItemStateChanged(evt);
            }
        });

        cmbTrack.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "Zolder" }));

        cmbTyres.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "Extra Soft", "Soft", "Medium", "Hard", "Rain" }));
        cmbTyres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTyresActionPerformed(evt);
            }
        });

        cmbTemp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "40", "39", "38", "30", "5" }));
        cmbTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTempActionPerformed(evt);
            }
        });

        cmbWeather.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "Sunny", "Cloudy", "Partially Cloudy" }));

        btnSetCarLvl.setText("Set car level");

        btnSetCarWear.setText("Set car Wear");

        btnSetPilot.setText("Set pilot");

        tblResults.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NÂº", "Testing"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tblResults, org.jdesktop.beansbinding.ObjectProperty.create(), tblResults, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        tblResults.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblResultsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblResults);

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblRank1.setText("Division");

        cmbRankDivision.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any" }));

        btnReturn.setText("Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSeason)
                                    .addComponent(cmbSeason, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRank)
                                    .addComponent(cmbRank, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRank1)
                                    .addComponent(cmbRankDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTrack)
                                    .addComponent(cmbTrack, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTyres)
                                    .addComponent(cmbTyres, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTemp))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblWeather)
                                    .addComponent(cmbWeather, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnSetPilot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSetCarWear))
                            .addComponent(btnSetCarLvl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTrack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbTrack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSetCarLvl)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTyres)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbTyres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTemp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblWeather)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbWeather, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSeason)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSeason, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSetCarWear)
                        .addGap(11, 11, 11)
                        .addComponent(btnSetPilot))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblRank)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblRank1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbRankDivision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbRank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(btnReturn))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed

        TestingQuery query = new TestingQuery();
        
        if(String.valueOf(cmbTrack.getSelectedItem()).compareTo("Any") != 0)
            query.setNameTrack(String.valueOf(cmbTrack.getSelectedItem()));  
        
        if(String.valueOf(cmbTyres.getSelectedItem()).compareTo("Any") != 0)
            query.setTyres(String.valueOf(cmbTyres.getSelectedItem()));
        
        if(String.valueOf(cmbSeason.getSelectedItem()).compareTo("Any") != 0)
            query.setSeason(String.valueOf(cmbSeason.getSelectedItem()));        

        if(String.valueOf(cmbRank.getSelectedItem()).compareTo("Any") != 0)
            query.setRank(String.valueOf(cmbRank.getSelectedItem()));
        
        if(String.valueOf(cmbRankDivision.getSelectedItem()).compareTo("Any") != 0)
            query.setRankDivision(String.valueOf(cmbRankDivision.getSelectedItem()));
        
        if(String.valueOf(cmbWeather.getSelectedItem()).compareTo("Any") != 0)
            query.setWeather(String.valueOf(cmbWeather.getSelectedItem()));
        
        if(String.valueOf(cmbTemp.getSelectedItem()).compareTo("Any") != 0)
            query.setTemperature(String.valueOf(cmbTemp.getSelectedItem()));

        DefaultTableModel model = (DefaultTableModel) tblResults.getModel();
        if(!this.baseController.searchTesting(query, model)){
            JOptionPane.showMessageDialog(null, "No testings were found.");
        }
        
        /*if (this.baseController.searchRace(Integer.parseInt(season), rank, Integer.parseInt(rankDivision))){
            System.out.println("ENCONTREI");
            DefaultTableModel model = (DefaultTableModel) tblResults.getModel();
            model.addRow(new Object[]{"S" + season + " " + rank + rankDivision});
        }
        else{
            System.out.println("NAO ENCONTREI");
        }*/
    }//GEN-LAST:event_btnSearchActionPerformed

    private void cmbRankItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbRankItemStateChanged
        // TODO add your handling code here:
        addRankDivisions();
    }//GEN-LAST:event_cmbRankItemStateChanged
        
    private void tblResultsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblResultsMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tblResultsMouseClicked

    private void cmbTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTempActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTempActionPerformed

    private void cmbTyresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTyresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTyresActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        // TODO add your handling code here:
        dispose();
        if(this.baseController == null){
            JOptionPane.showMessageDialog(null, "Error at program's controller");
            dispose();
        }
        else{
            MainScreen ms = new MainScreen(this.baseController);
            ms.setVisible(true);
            }
    }//GEN-LAST:event_btnReturnActionPerformed

    /**
     * @param args the command line arguments
     */
private void initSelfListeners(GproToolController controller){
        
        this.tblResults.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent mouseEvent) {
                JTable table = (JTable) mouseEvent.getSource();
                DefaultTableModel model = (DefaultTableModel) table.getModel();
                Point point = mouseEvent.getPoint();
                int row = table.rowAtPoint(point);
                if (mouseEvent.getClickCount() == 2) {
                    Integer key = Integer.parseInt(String.valueOf(model.getDataVector().elementAt(table.getSelectedRow())).split("[\\[\\]]")[1].split(",")[0]);
                    TestingScreen ts = new TestingScreen(controller, key);
                    ts.setVisible(true);
                }
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSetCarLvl;
    private javax.swing.JButton btnSetCarWear;
    private javax.swing.JButton btnSetPilot;
    private javax.swing.JComboBox<String> cmbRank;
    private javax.swing.JComboBox<String> cmbRankDivision;
    private javax.swing.JComboBox<String> cmbSeason;
    private javax.swing.JComboBox<String> cmbTemp;
    private javax.swing.JComboBox<String> cmbTrack;
    private javax.swing.JComboBox<String> cmbTyres;
    private javax.swing.JComboBox<String> cmbWeather;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblRank;
    private javax.swing.JLabel lblRank1;
    private javax.swing.JLabel lblSeason;
    private javax.swing.JLabel lblTemp;
    private javax.swing.JLabel lblTrack;
    private javax.swing.JLabel lblTyres;
    private javax.swing.JLabel lblWeather;
    private javax.swing.JTable tblResults;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public static void setLookAndFeel() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            System.out.println("Error setting native LAF: " + e);
        }
    }
    
    private void centerFrame() {

        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Point middle = new Point(screenSize.width / 2, screenSize.height / 2);
        Point newLocation = new Point(middle.x - (this.getWidth() / 2),
                middle.y - (this.getHeight() / 2));
        this.setLocation(newLocation);
    }

    private void addRankDivisions() {
        String rank = (String) cmbRank.getSelectedItem();
        
        if(rank.compareTo("Rookie") == 0 || rank.compareTo("Any") == 0){
            cmbRankDivision.removeAllItems();
            cmbRankDivision.addItem("Any");
            for(int i = 1; i < 201; i++){
                cmbRankDivision.addItem(String.valueOf(i));
            }
        }
        else if(rank.compareTo("Amateur") == 0){
            cmbRankDivision.removeAllItems();
            cmbRankDivision.addItem("Any");
            for(int i = 1; i < 126; i++){
                cmbRankDivision.addItem(String.valueOf(i));
            }
        }
        else if (rank.compareTo("Pro") == 0) {
            cmbRankDivision.removeAllItems();
            cmbRankDivision.addItem("Any");
            for (int i = 1; i < 26; i++) {
                cmbRankDivision.addItem(String.valueOf(i));
            }
        }
        else if (rank.compareTo("Master") == 0) {
            cmbRankDivision.removeAllItems();
            cmbRankDivision.addItem("Any");
            for (int i = 1; i < 6; i++) {
                cmbRankDivision.addItem(String.valueOf(i));
            }
        }
        else if (rank.compareTo("Elite") == 0) {
            cmbRankDivision.removeAllItems();
            cmbRankDivision.addItem("Any");
            for (int i = 1; i < 2; i++) {
                cmbRankDivision.addItem(String.valueOf(i));
            }
        }
    }
}
