/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.GproToolController;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.TreeMap;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.UIManager;
import model.RaceAnalysis;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.DefaultXYDataset;
import org.jfree.data.xy.XYDataset;

/**
 *
 * @author Rafael
 */
public class PilotHistoryScreen extends javax.swing.JFrame {

    private GproToolController baseController;
    private TreeMap<Integer, RaceAnalysis> races;

    /**
     * Creates new form PilotHistoryScreen
     */
    public PilotHistoryScreen(GproToolController controller, TreeMap<Integer, RaceAnalysis> races) {
        this.baseController = controller;
        this.races = races;
        setLookAndFeel();
        //initComponents();
        JFrame frame = this;

        frame.setSize(400, 400);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
        frame.setBackground(Color.white);
        frame.setForeground(Color.white);
        

        JPanel panel = new JPanel();
        panel.setSize(180, 100);
        panel.setMaximumSize(new Dimension(180, 100));
        panel.setMinimumSize(new Dimension(180, 100));
        panel.setBackground(Color.white);
        panel.setForeground(Color.white);

        XYDataset ds = createDataset();

        JFreeChart chart = ChartFactory.createXYLineChart("Pilot",
                "x", "y", ds, PlotOrientation.VERTICAL, true, true,
                false);

        ChartPanel cp = new ChartPanel(chart, 300, 300, 300, 300, 300, 300, true, true, true, true, true, true);
        cp.setSize(180, 100);
        cp.setMaximumSize(new Dimension(180, 100));
        cp.setMinimumSize(new Dimension(180, 100));
        panel.add(cp, BorderLayout.CENTER);
        frame.getContentPane().add(panel, BorderLayout.CENTER);

        JPanel btnPanel = new JPanel();
        btnPanel.setSize(65, 23);
        btnPanel.setBackground(Color.white);
        btnPanel.setForeground(Color.white);
        JButton btnReturn = new JButton("Return");
        btnReturn.setSize(65, 23);
        btnReturn.setMaximumSize(new Dimension(65, 23));
        btnReturn.setMinimumSize(new Dimension(65, 23));
        btnPanel.add(btnReturn);
        frame.getContentPane().add(btnPanel, BorderLayout.SOUTH);
        
        btnReturn.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
            }

        });
        
        centerFrame();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setFocusableWindowState(false);
        setForeground(java.awt.Color.white);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void setLookAndFeel() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            System.out.println("Error setting native LAF: " + e);
        }
    }

    public XYDataset createDataset() {

        XYDataset ds;
        ds = baseController.getPilotDataset(this.races);

        return ds;
    }
    
    private void centerFrame() {

        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Point middle = new Point(screenSize.width / 2, screenSize.height / 2);
        Point newLocation = new Point(middle.x - (this.getWidth() / 2),
                middle.y - (this.getHeight() / 2));
        this.setLocation(newLocation);
    }

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {                                         
        dispose();
    }  
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
